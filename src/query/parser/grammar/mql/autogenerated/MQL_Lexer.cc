
// Generated from MQL_Lexer.g4 by ANTLR 4.13.1


#include "MQL_Lexer.h"


using namespace antlr4;



using namespace antlr4;

namespace {

struct MQL_LexerStaticData final {
  MQL_LexerStaticData(std::vector<std::string> ruleNames,
                          std::vector<std::string> channelNames,
                          std::vector<std::string> modeNames,
                          std::vector<std::string> literalNames,
                          std::vector<std::string> symbolicNames)
      : ruleNames(std::move(ruleNames)), channelNames(std::move(channelNames)),
        modeNames(std::move(modeNames)), literalNames(std::move(literalNames)),
        symbolicNames(std::move(symbolicNames)),
        vocabulary(this->literalNames, this->symbolicNames) {}

  MQL_LexerStaticData(const MQL_LexerStaticData&) = delete;
  MQL_LexerStaticData(MQL_LexerStaticData&&) = delete;
  MQL_LexerStaticData& operator=(const MQL_LexerStaticData&) = delete;
  MQL_LexerStaticData& operator=(MQL_LexerStaticData&&) = delete;

  std::vector<antlr4::dfa::DFA> decisionToDFA;
  antlr4::atn::PredictionContextCache sharedContextCache;
  const std::vector<std::string> ruleNames;
  const std::vector<std::string> channelNames;
  const std::vector<std::string> modeNames;
  const std::vector<std::string> literalNames;
  const std::vector<std::string> symbolicNames;
  const antlr4::dfa::Vocabulary vocabulary;
  antlr4::atn::SerializedATNView serializedATN;
  std::unique_ptr<antlr4::atn::ATN> atn;
};

::antlr4::internal::OnceFlag mql_lexerLexerOnceFlag;
#if ANTLR4_USE_THREAD_LOCAL_CACHE
static thread_local
#endif
MQL_LexerStaticData *mql_lexerLexerStaticData = nullptr;

void mql_lexerLexerInitialize() {
#if ANTLR4_USE_THREAD_LOCAL_CACHE
  if (mql_lexerLexerStaticData != nullptr) {
    return;
  }
#else
  assert(mql_lexerLexerStaticData == nullptr);
#endif
  auto staticData = std::make_unique<MQL_LexerStaticData>(
    std::vector<std::string>{
      "K_ACYCLIC", "K_AND", "K_ANGULAR", "K_ANY", "K_AS", "K_AVG", "K_ALL", 
      "K_ASC", "K_BY", "K_BOOL", "K_COUNT", "K_CREATE", "K_DELETE", "K_DESCRIBE", 
      "K_DESC", "K_DIMENSIONS", "K_DISTINCT", "K_EDGE", "K_EUCLIDEAN", "K_FROM", 
      "K_INCOMING", "K_INDEX", "K_INSERT", "K_INTEGER", "K_INTO", "K_IS", 
      "K_FALSE", "K_FLOAT", "K_GROUP", "K_GROUPS", "K_IDENTITY", "K_LABELS", 
      "K_LABEL", "K_LIMIT", "K_MANHATTAN", "K_MATCH", "K_MAX", "K_MIN", 
      "K_NFKD_CASEFOLD", "K_NORMALIZE", "K_OBJECTS", "K_OFFSET", "K_ON", 
      "K_OPTIONAL", "K_ORDER", "K_OR", "K_OUTGOING", "K_PREFIX", "K_PROPERTIES", 
      "K_PROPERTY", "K_NOT", "K_NULL", "K_SHORTEST", "K_SHOW", "K_SIMPLE", 
      "K_TENSOR_DISTANCE", "K_TEXT_SEARCH", "K_REGEX", "K_RETURN", "K_SET", 
      "K_SUM", "K_STRING", "K_STORE", "K_TENSOR", "K_TEXT", "K_TRUE", "K_TOKENIZE", 
      "K_TRAILS", "K_VALUES", "K_WALKS", "K_WITH", "K_WHERE", "DATA_TEST", 
      "NAIVE", "K_WS_KEEP_PUNCT", "K_WS_RM_PUNCT", "K_WS_SPLIT_PUNCT", "TRUE_PROP", 
      "FALSE_PROP", "ANON_ID", "EDGE_ID", "KEY", "TYPE", "TYPE_VAR", "VARIABLE", 
      "STRING", "UNSIGNED_INTEGER", "UNSIGNED_FLOAT", "UNSIGNED_SCIENTIFIC_NOTATION", 
      "NAME", "LEQ", "GEQ", "EQ", "NEQ", "LT", "GT", "SINGLE_EQ", "PATH_SEQUENCE", 
      "PATH_ALTERNATIVE", "PATH_NEGATION", "STAR", "PERCENT", "QUESTION_MARK", 
      "PLUS", "MINUS", "L_PAR", "R_PAR", "LCURLY_BRACKET", "RCURLY_BRACKET", 
      "LSQUARE_BRACKET", "RSQUARE_BRACKET", "COMMA", "COLON", "WHITE_SPACE", 
      "SINGLE_LINE_COMMENT", "UNRECOGNIZED", "DIGIT", "EXPONENT", "A", "B", 
      "C", "D", "E", "F", "G", "H", "I", "J", "K", "L", "M", "N", "O", "P", 
      "Q", "R", "S", "T", "U", "V", "W", "X", "Y", "Z"
    },
    std::vector<std::string>{
      "DEFAULT_TOKEN_CHANNEL", "HIDDEN"
    },
    std::vector<std::string>{
      "DEFAULT_MODE"
    },
    std::vector<std::string>{
      "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", 
      "", "", "", "", "", "", "", "", "", "", "'false'", "", "", "", "", 
      "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", 
      "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", 
      "'true'", "", "", "", "", "", "", "", "", "", "", "", "", "", "", 
      "", "", "", "", "", "", "", "", "", "", "'<='", "'>='", "'=='", "'!='", 
      "'<'", "'>'", "'='", "'/'", "'|'", "'^'", "'*'", "'%'", "'\\u003F'", 
      "'+'", "'-'", "'('", "')'", "'{'", "'}'", "'['", "']'", "','", "':'"
    },
    std::vector<std::string>{
      "", "K_ACYCLIC", "K_AND", "K_ANGULAR", "K_ANY", "K_AS", "K_AVG", "K_ALL", 
      "K_ASC", "K_BY", "K_BOOL", "K_COUNT", "K_CREATE", "K_DELETE", "K_DESCRIBE", 
      "K_DESC", "K_DIMENSIONS", "K_DISTINCT", "K_EDGE", "K_EUCLIDEAN", "K_FROM", 
      "K_INCOMING", "K_INDEX", "K_INSERT", "K_INTEGER", "K_INTO", "K_IS", 
      "K_FALSE", "K_FLOAT", "K_GROUP", "K_GROUPS", "K_IDENTITY", "K_LABELS", 
      "K_LABEL", "K_LIMIT", "K_MANHATTAN", "K_MATCH", "K_MAX", "K_MIN", 
      "K_NFKD_CASEFOLD", "K_NORMALIZE", "K_OBJECTS", "K_OFFSET", "K_ON", 
      "K_OPTIONAL", "K_ORDER", "K_OR", "K_OUTGOING", "K_PREFIX", "K_PROPERTIES", 
      "K_PROPERTY", "K_NOT", "K_NULL", "K_SHORTEST", "K_SHOW", "K_SIMPLE", 
      "K_TENSOR_DISTANCE", "K_TEXT_SEARCH", "K_REGEX", "K_RETURN", "K_SET", 
      "K_SUM", "K_STRING", "K_STORE", "K_TENSOR", "K_TEXT", "K_TRUE", "K_TOKENIZE", 
      "K_TRAILS", "K_VALUES", "K_WALKS", "K_WITH", "K_WHERE", "DATA_TEST", 
      "NAIVE", "K_WS_KEEP_PUNCT", "K_WS_RM_PUNCT", "K_WS_SPLIT_PUNCT", "TRUE_PROP", 
      "FALSE_PROP", "ANON_ID", "EDGE_ID", "KEY", "TYPE", "TYPE_VAR", "VARIABLE", 
      "STRING", "UNSIGNED_INTEGER", "UNSIGNED_FLOAT", "UNSIGNED_SCIENTIFIC_NOTATION", 
      "NAME", "LEQ", "GEQ", "EQ", "NEQ", "LT", "GT", "SINGLE_EQ", "PATH_SEQUENCE", 
      "PATH_ALTERNATIVE", "PATH_NEGATION", "STAR", "PERCENT", "QUESTION_MARK", 
      "PLUS", "MINUS", "L_PAR", "R_PAR", "LCURLY_BRACKET", "RCURLY_BRACKET", 
      "LSQUARE_BRACKET", "RSQUARE_BRACKET", "COMMA", "COLON", "WHITE_SPACE", 
      "SINGLE_LINE_COMMENT", "UNRECOGNIZED"
    }
  );
  static const int32_t serializedATNSegment[] = {
  	4,0,116,1103,6,-1,2,0,7,0,2,1,7,1,2,2,7,2,2,3,7,3,2,4,7,4,2,5,7,5,2,6,
  	7,6,2,7,7,7,2,8,7,8,2,9,7,9,2,10,7,10,2,11,7,11,2,12,7,12,2,13,7,13,2,
  	14,7,14,2,15,7,15,2,16,7,16,2,17,7,17,2,18,7,18,2,19,7,19,2,20,7,20,2,
  	21,7,21,2,22,7,22,2,23,7,23,2,24,7,24,2,25,7,25,2,26,7,26,2,27,7,27,2,
  	28,7,28,2,29,7,29,2,30,7,30,2,31,7,31,2,32,7,32,2,33,7,33,2,34,7,34,2,
  	35,7,35,2,36,7,36,2,37,7,37,2,38,7,38,2,39,7,39,2,40,7,40,2,41,7,41,2,
  	42,7,42,2,43,7,43,2,44,7,44,2,45,7,45,2,46,7,46,2,47,7,47,2,48,7,48,2,
  	49,7,49,2,50,7,50,2,51,7,51,2,52,7,52,2,53,7,53,2,54,7,54,2,55,7,55,2,
  	56,7,56,2,57,7,57,2,58,7,58,2,59,7,59,2,60,7,60,2,61,7,61,2,62,7,62,2,
  	63,7,63,2,64,7,64,2,65,7,65,2,66,7,66,2,67,7,67,2,68,7,68,2,69,7,69,2,
  	70,7,70,2,71,7,71,2,72,7,72,2,73,7,73,2,74,7,74,2,75,7,75,2,76,7,76,2,
  	77,7,77,2,78,7,78,2,79,7,79,2,80,7,80,2,81,7,81,2,82,7,82,2,83,7,83,2,
  	84,7,84,2,85,7,85,2,86,7,86,2,87,7,87,2,88,7,88,2,89,7,89,2,90,7,90,2,
  	91,7,91,2,92,7,92,2,93,7,93,2,94,7,94,2,95,7,95,2,96,7,96,2,97,7,97,2,
  	98,7,98,2,99,7,99,2,100,7,100,2,101,7,101,2,102,7,102,2,103,7,103,2,104,
  	7,104,2,105,7,105,2,106,7,106,2,107,7,107,2,108,7,108,2,109,7,109,2,110,
  	7,110,2,111,7,111,2,112,7,112,2,113,7,113,2,114,7,114,2,115,7,115,2,116,
  	7,116,2,117,7,117,2,118,7,118,2,119,7,119,2,120,7,120,2,121,7,121,2,122,
  	7,122,2,123,7,123,2,124,7,124,2,125,7,125,2,126,7,126,2,127,7,127,2,128,
  	7,128,2,129,7,129,2,130,7,130,2,131,7,131,2,132,7,132,2,133,7,133,2,134,
  	7,134,2,135,7,135,2,136,7,136,2,137,7,137,2,138,7,138,2,139,7,139,2,140,
  	7,140,2,141,7,141,2,142,7,142,2,143,7,143,1,0,1,0,1,0,1,0,1,0,1,0,1,0,
  	1,0,1,1,1,1,1,1,1,1,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,3,1,3,1,3,1,3,1,
  	4,1,4,1,4,1,5,1,5,1,5,1,5,1,6,1,6,1,6,1,6,1,7,1,7,1,7,1,7,1,8,1,8,1,8,
  	1,9,1,9,1,9,1,9,1,9,1,10,1,10,1,10,1,10,1,10,1,10,1,11,1,11,1,11,1,11,
  	1,11,1,11,1,11,1,12,1,12,1,12,1,12,1,12,1,12,1,12,1,13,1,13,1,13,1,13,
  	1,13,1,13,1,13,1,13,1,13,1,14,1,14,1,14,1,14,1,14,1,15,1,15,1,15,1,15,
  	1,15,1,15,1,15,1,15,1,15,1,15,1,15,1,16,1,16,1,16,1,16,1,16,1,16,1,16,
  	1,16,1,16,1,17,1,17,1,17,1,17,1,17,1,18,1,18,1,18,1,18,1,18,1,18,1,18,
  	1,18,1,18,1,18,1,19,1,19,1,19,1,19,1,19,1,20,1,20,1,20,1,20,1,20,1,20,
  	1,20,1,20,1,20,1,21,1,21,1,21,1,21,1,21,1,21,1,22,1,22,1,22,1,22,1,22,
  	1,22,1,22,1,23,1,23,1,23,1,23,1,23,1,23,1,23,1,23,1,24,1,24,1,24,1,24,
  	1,24,1,25,1,25,1,25,1,26,1,26,1,26,1,26,1,26,1,26,1,27,1,27,1,27,1,27,
  	1,27,1,27,1,28,1,28,1,28,1,28,1,28,1,28,1,29,1,29,1,29,1,29,1,29,1,29,
  	1,29,1,30,1,30,1,30,1,30,1,30,1,30,1,30,1,30,1,30,1,31,1,31,1,31,1,31,
  	1,31,1,31,1,31,1,32,1,32,1,32,1,32,1,32,1,32,1,33,1,33,1,33,1,33,1,33,
  	1,33,1,34,1,34,1,34,1,34,1,34,1,34,1,34,1,34,1,34,1,34,1,35,1,35,1,35,
  	1,35,1,35,1,35,1,36,1,36,1,36,1,36,1,37,1,37,1,37,1,37,1,38,1,38,1,38,
  	1,38,1,38,1,38,1,38,1,38,1,38,1,38,1,38,1,38,1,38,1,38,1,39,1,39,1,39,
  	1,39,1,39,1,39,1,39,1,39,1,39,1,39,1,40,1,40,1,40,1,40,1,40,1,40,1,40,
  	1,40,1,41,1,41,1,41,1,41,1,41,1,41,1,41,1,42,1,42,1,42,1,43,1,43,1,43,
  	1,43,1,43,1,43,1,43,1,43,1,43,1,44,1,44,1,44,1,44,1,44,1,44,1,45,1,45,
  	1,45,1,46,1,46,1,46,1,46,1,46,1,46,1,46,1,46,1,46,1,47,1,47,1,47,1,47,
  	1,47,1,47,1,47,1,48,1,48,1,48,1,48,1,48,1,48,1,48,1,48,1,48,1,48,1,48,
  	1,49,1,49,1,49,1,49,1,49,1,49,1,49,1,49,1,49,1,50,1,50,1,50,1,50,1,51,
  	1,51,1,51,1,51,1,51,1,52,1,52,1,52,1,52,1,52,1,52,1,52,1,52,1,52,1,53,
  	1,53,1,53,1,53,1,53,1,54,1,54,1,54,1,54,1,54,1,54,1,54,1,55,1,55,1,55,
  	1,55,1,55,1,55,1,55,1,55,1,55,1,55,1,55,1,55,1,55,1,55,1,55,1,55,1,56,
  	1,56,1,56,1,56,1,56,1,56,1,56,1,56,1,56,1,56,1,56,1,56,1,57,1,57,1,57,
  	1,57,1,57,1,57,1,58,1,58,1,58,1,58,1,58,1,58,1,58,1,59,1,59,1,59,1,59,
  	1,60,1,60,1,60,1,60,1,61,1,61,1,61,1,61,1,61,1,61,1,61,1,62,1,62,1,62,
  	1,62,1,62,1,62,1,63,1,63,1,63,1,63,1,63,1,63,1,63,1,64,1,64,1,64,1,64,
  	1,64,1,65,1,65,1,65,1,65,1,65,1,66,1,66,1,66,1,66,1,66,1,66,1,66,1,66,
  	1,66,1,67,1,67,1,67,1,67,1,67,1,67,1,67,1,68,1,68,1,68,1,68,1,68,1,68,
  	1,68,1,69,1,69,1,69,1,69,1,69,1,69,1,70,1,70,1,70,1,70,1,70,1,71,1,71,
  	1,71,1,71,1,71,1,71,1,72,1,72,1,72,1,72,1,72,1,72,1,72,1,72,1,72,1,72,
  	1,73,1,73,1,73,1,73,1,73,1,73,1,74,1,74,1,74,1,74,1,74,1,74,1,74,1,74,
  	1,74,1,74,1,74,1,74,1,74,1,74,1,75,1,75,1,75,1,75,1,75,1,75,1,75,1,75,
  	1,75,1,75,1,75,1,75,1,76,1,76,1,76,1,76,1,76,1,76,1,76,1,76,1,76,1,76,
  	1,76,1,76,1,76,1,76,1,76,1,77,1,77,1,77,1,77,1,77,1,77,1,78,1,78,1,78,
  	1,78,1,78,1,78,1,78,1,79,1,79,1,79,1,79,4,79,845,8,79,11,79,12,79,846,
  	1,80,1,80,1,80,1,80,4,80,853,8,80,11,80,12,80,854,1,81,1,81,1,81,5,81,
  	860,8,81,10,81,12,81,863,9,81,1,82,1,82,1,82,5,82,868,8,82,10,82,12,82,
  	871,9,82,1,83,1,83,1,83,1,83,5,83,877,8,83,10,83,12,83,880,9,83,1,84,
  	1,84,1,84,5,84,885,8,84,10,84,12,84,888,9,84,1,85,1,85,1,85,1,85,5,85,
  	894,8,85,10,85,12,85,897,9,85,1,85,1,85,1,86,4,86,902,8,86,11,86,12,86,
  	903,1,87,4,87,907,8,87,11,87,12,87,908,1,87,1,87,5,87,913,8,87,10,87,
  	12,87,916,9,87,1,87,1,87,4,87,920,8,87,11,87,12,87,921,3,87,924,8,87,
  	1,88,4,88,927,8,88,11,88,12,88,928,1,88,1,88,5,88,933,8,88,10,88,12,88,
  	936,9,88,1,88,1,88,1,88,1,88,4,88,942,8,88,11,88,12,88,943,1,88,1,88,
  	1,88,4,88,949,8,88,11,88,12,88,950,1,88,1,88,3,88,955,8,88,1,89,1,89,
  	5,89,959,8,89,10,89,12,89,962,9,89,1,90,1,90,1,90,1,91,1,91,1,91,1,92,
  	1,92,1,92,1,93,1,93,1,93,1,94,1,94,1,95,1,95,1,96,1,96,1,97,1,97,1,98,
  	1,98,1,99,1,99,1,100,1,100,1,101,1,101,1,102,1,102,1,103,1,103,1,104,
  	1,104,1,105,1,105,1,106,1,106,1,107,1,107,1,108,1,108,1,109,1,109,1,110,
  	1,110,1,111,1,111,1,112,1,112,1,113,4,113,1015,8,113,11,113,12,113,1016,
  	1,113,1,113,1,114,1,114,1,114,1,114,5,114,1025,8,114,10,114,12,114,1028,
  	9,114,1,114,3,114,1031,8,114,1,114,1,114,3,114,1035,8,114,1,114,1,114,
  	1,115,1,115,1,116,1,116,1,117,1,117,3,117,1045,8,117,1,117,4,117,1048,
  	8,117,11,117,12,117,1049,1,118,1,118,1,119,1,119,1,120,1,120,1,121,1,
  	121,1,122,1,122,1,123,1,123,1,124,1,124,1,125,1,125,1,126,1,126,1,127,
  	1,127,1,128,1,128,1,129,1,129,1,130,1,130,1,131,1,131,1,132,1,132,1,133,
  	1,133,1,134,1,134,1,135,1,135,1,136,1,136,1,137,1,137,1,138,1,138,1,139,
  	1,139,1,140,1,140,1,141,1,141,1,142,1,142,1,143,1,143,0,0,144,1,1,3,2,
  	5,3,7,4,9,5,11,6,13,7,15,8,17,9,19,10,21,11,23,12,25,13,27,14,29,15,31,
  	16,33,17,35,18,37,19,39,20,41,21,43,22,45,23,47,24,49,25,51,26,53,27,
  	55,28,57,29,59,30,61,31,63,32,65,33,67,34,69,35,71,36,73,37,75,38,77,
  	39,79,40,81,41,83,42,85,43,87,44,89,45,91,46,93,47,95,48,97,49,99,50,
  	101,51,103,52,105,53,107,54,109,55,111,56,113,57,115,58,117,59,119,60,
  	121,61,123,62,125,63,127,64,129,65,131,66,133,67,135,68,137,69,139,70,
  	141,71,143,72,145,73,147,74,149,75,151,76,153,77,155,78,157,79,159,80,
  	161,81,163,82,165,83,167,84,169,85,171,86,173,87,175,88,177,89,179,90,
  	181,91,183,92,185,93,187,94,189,95,191,96,193,97,195,98,197,99,199,100,
  	201,101,203,102,205,103,207,104,209,105,211,106,213,107,215,108,217,109,
  	219,110,221,111,223,112,225,113,227,114,229,115,231,116,233,0,235,0,237,
  	0,239,0,241,0,243,0,245,0,247,0,249,0,251,0,253,0,255,0,257,0,259,0,261,
  	0,263,0,265,0,267,0,269,0,271,0,273,0,275,0,277,0,279,0,281,0,283,0,285,
  	0,287,0,1,0,33,1,0,48,57,2,0,65,90,97,122,4,0,48,57,65,90,95,95,97,122,
  	1,0,34,34,3,0,9,10,13,13,32,32,2,0,10,10,13,13,2,0,69,69,101,101,2,0,
  	43,43,45,45,2,0,65,65,97,97,2,0,66,66,98,98,2,0,67,67,99,99,2,0,68,68,
  	100,100,2,0,70,70,102,102,2,0,71,71,103,103,2,0,72,72,104,104,2,0,73,
  	73,105,105,2,0,74,74,106,106,2,0,75,75,107,107,2,0,76,76,108,108,2,0,
  	77,77,109,109,2,0,78,78,110,110,2,0,79,79,111,111,2,0,80,80,112,112,2,
  	0,81,81,113,113,2,0,82,82,114,114,2,0,83,83,115,115,2,0,84,84,116,116,
  	2,0,85,85,117,117,2,0,86,86,118,118,2,0,87,87,119,119,2,0,88,88,120,120,
  	2,0,89,89,121,121,2,0,90,90,122,122,1100,0,1,1,0,0,0,0,3,1,0,0,0,0,5,
  	1,0,0,0,0,7,1,0,0,0,0,9,1,0,0,0,0,11,1,0,0,0,0,13,1,0,0,0,0,15,1,0,0,
  	0,0,17,1,0,0,0,0,19,1,0,0,0,0,21,1,0,0,0,0,23,1,0,0,0,0,25,1,0,0,0,0,
  	27,1,0,0,0,0,29,1,0,0,0,0,31,1,0,0,0,0,33,1,0,0,0,0,35,1,0,0,0,0,37,1,
  	0,0,0,0,39,1,0,0,0,0,41,1,0,0,0,0,43,1,0,0,0,0,45,1,0,0,0,0,47,1,0,0,
  	0,0,49,1,0,0,0,0,51,1,0,0,0,0,53,1,0,0,0,0,55,1,0,0,0,0,57,1,0,0,0,0,
  	59,1,0,0,0,0,61,1,0,0,0,0,63,1,0,0,0,0,65,1,0,0,0,0,67,1,0,0,0,0,69,1,
  	0,0,0,0,71,1,0,0,0,0,73,1,0,0,0,0,75,1,0,0,0,0,77,1,0,0,0,0,79,1,0,0,
  	0,0,81,1,0,0,0,0,83,1,0,0,0,0,85,1,0,0,0,0,87,1,0,0,0,0,89,1,0,0,0,0,
  	91,1,0,0,0,0,93,1,0,0,0,0,95,1,0,0,0,0,97,1,0,0,0,0,99,1,0,0,0,0,101,
  	1,0,0,0,0,103,1,0,0,0,0,105,1,0,0,0,0,107,1,0,0,0,0,109,1,0,0,0,0,111,
  	1,0,0,0,0,113,1,0,0,0,0,115,1,0,0,0,0,117,1,0,0,0,0,119,1,0,0,0,0,121,
  	1,0,0,0,0,123,1,0,0,0,0,125,1,0,0,0,0,127,1,0,0,0,0,129,1,0,0,0,0,131,
  	1,0,0,0,0,133,1,0,0,0,0,135,1,0,0,0,0,137,1,0,0,0,0,139,1,0,0,0,0,141,
  	1,0,0,0,0,143,1,0,0,0,0,145,1,0,0,0,0,147,1,0,0,0,0,149,1,0,0,0,0,151,
  	1,0,0,0,0,153,1,0,0,0,0,155,1,0,0,0,0,157,1,0,0,0,0,159,1,0,0,0,0,161,
  	1,0,0,0,0,163,1,0,0,0,0,165,1,0,0,0,0,167,1,0,0,0,0,169,1,0,0,0,0,171,
  	1,0,0,0,0,173,1,0,0,0,0,175,1,0,0,0,0,177,1,0,0,0,0,179,1,0,0,0,0,181,
  	1,0,0,0,0,183,1,0,0,0,0,185,1,0,0,0,0,187,1,0,0,0,0,189,1,0,0,0,0,191,
  	1,0,0,0,0,193,1,0,0,0,0,195,1,0,0,0,0,197,1,0,0,0,0,199,1,0,0,0,0,201,
  	1,0,0,0,0,203,1,0,0,0,0,205,1,0,0,0,0,207,1,0,0,0,0,209,1,0,0,0,0,211,
  	1,0,0,0,0,213,1,0,0,0,0,215,1,0,0,0,0,217,1,0,0,0,0,219,1,0,0,0,0,221,
  	1,0,0,0,0,223,1,0,0,0,0,225,1,0,0,0,0,227,1,0,0,0,0,229,1,0,0,0,0,231,
  	1,0,0,0,1,289,1,0,0,0,3,297,1,0,0,0,5,301,1,0,0,0,7,309,1,0,0,0,9,313,
  	1,0,0,0,11,316,1,0,0,0,13,320,1,0,0,0,15,324,1,0,0,0,17,328,1,0,0,0,19,
  	331,1,0,0,0,21,336,1,0,0,0,23,342,1,0,0,0,25,349,1,0,0,0,27,356,1,0,0,
  	0,29,365,1,0,0,0,31,370,1,0,0,0,33,381,1,0,0,0,35,390,1,0,0,0,37,395,
  	1,0,0,0,39,405,1,0,0,0,41,410,1,0,0,0,43,419,1,0,0,0,45,425,1,0,0,0,47,
  	432,1,0,0,0,49,440,1,0,0,0,51,445,1,0,0,0,53,448,1,0,0,0,55,454,1,0,0,
  	0,57,460,1,0,0,0,59,466,1,0,0,0,61,473,1,0,0,0,63,482,1,0,0,0,65,489,
  	1,0,0,0,67,495,1,0,0,0,69,501,1,0,0,0,71,511,1,0,0,0,73,517,1,0,0,0,75,
  	521,1,0,0,0,77,525,1,0,0,0,79,539,1,0,0,0,81,549,1,0,0,0,83,557,1,0,0,
  	0,85,564,1,0,0,0,87,567,1,0,0,0,89,576,1,0,0,0,91,582,1,0,0,0,93,585,
  	1,0,0,0,95,594,1,0,0,0,97,601,1,0,0,0,99,612,1,0,0,0,101,621,1,0,0,0,
  	103,625,1,0,0,0,105,630,1,0,0,0,107,639,1,0,0,0,109,644,1,0,0,0,111,651,
  	1,0,0,0,113,667,1,0,0,0,115,679,1,0,0,0,117,685,1,0,0,0,119,692,1,0,0,
  	0,121,696,1,0,0,0,123,700,1,0,0,0,125,707,1,0,0,0,127,713,1,0,0,0,129,
  	720,1,0,0,0,131,725,1,0,0,0,133,730,1,0,0,0,135,739,1,0,0,0,137,746,1,
  	0,0,0,139,753,1,0,0,0,141,759,1,0,0,0,143,764,1,0,0,0,145,770,1,0,0,0,
  	147,780,1,0,0,0,149,786,1,0,0,0,151,800,1,0,0,0,153,812,1,0,0,0,155,827,
  	1,0,0,0,157,833,1,0,0,0,159,840,1,0,0,0,161,848,1,0,0,0,163,856,1,0,0,
  	0,165,864,1,0,0,0,167,872,1,0,0,0,169,881,1,0,0,0,171,889,1,0,0,0,173,
  	901,1,0,0,0,175,923,1,0,0,0,177,954,1,0,0,0,179,956,1,0,0,0,181,963,1,
  	0,0,0,183,966,1,0,0,0,185,969,1,0,0,0,187,972,1,0,0,0,189,975,1,0,0,0,
  	191,977,1,0,0,0,193,979,1,0,0,0,195,981,1,0,0,0,197,983,1,0,0,0,199,985,
  	1,0,0,0,201,987,1,0,0,0,203,989,1,0,0,0,205,991,1,0,0,0,207,993,1,0,0,
  	0,209,995,1,0,0,0,211,997,1,0,0,0,213,999,1,0,0,0,215,1001,1,0,0,0,217,
  	1003,1,0,0,0,219,1005,1,0,0,0,221,1007,1,0,0,0,223,1009,1,0,0,0,225,1011,
  	1,0,0,0,227,1014,1,0,0,0,229,1020,1,0,0,0,231,1038,1,0,0,0,233,1040,1,
  	0,0,0,235,1042,1,0,0,0,237,1051,1,0,0,0,239,1053,1,0,0,0,241,1055,1,0,
  	0,0,243,1057,1,0,0,0,245,1059,1,0,0,0,247,1061,1,0,0,0,249,1063,1,0,0,
  	0,251,1065,1,0,0,0,253,1067,1,0,0,0,255,1069,1,0,0,0,257,1071,1,0,0,0,
  	259,1073,1,0,0,0,261,1075,1,0,0,0,263,1077,1,0,0,0,265,1079,1,0,0,0,267,
  	1081,1,0,0,0,269,1083,1,0,0,0,271,1085,1,0,0,0,273,1087,1,0,0,0,275,1089,
  	1,0,0,0,277,1091,1,0,0,0,279,1093,1,0,0,0,281,1095,1,0,0,0,283,1097,1,
  	0,0,0,285,1099,1,0,0,0,287,1101,1,0,0,0,289,290,3,237,118,0,290,291,3,
  	241,120,0,291,292,3,285,142,0,292,293,3,241,120,0,293,294,3,259,129,0,
  	294,295,3,253,126,0,295,296,3,241,120,0,296,2,1,0,0,0,297,298,3,237,118,
  	0,298,299,3,263,131,0,299,300,3,243,121,0,300,4,1,0,0,0,301,302,3,237,
  	118,0,302,303,3,263,131,0,303,304,3,249,124,0,304,305,3,277,138,0,305,
  	306,3,259,129,0,306,307,3,237,118,0,307,308,3,271,135,0,308,6,1,0,0,0,
  	309,310,3,237,118,0,310,311,3,263,131,0,311,312,3,285,142,0,312,8,1,0,
  	0,0,313,314,3,237,118,0,314,315,3,273,136,0,315,10,1,0,0,0,316,317,3,
  	237,118,0,317,318,3,279,139,0,318,319,3,249,124,0,319,12,1,0,0,0,320,
  	321,3,237,118,0,321,322,3,259,129,0,322,323,3,259,129,0,323,14,1,0,0,
  	0,324,325,3,237,118,0,325,326,3,273,136,0,326,327,3,241,120,0,327,16,
  	1,0,0,0,328,329,3,239,119,0,329,330,3,285,142,0,330,18,1,0,0,0,331,332,
  	3,239,119,0,332,333,3,265,132,0,333,334,3,265,132,0,334,335,3,259,129,
  	0,335,20,1,0,0,0,336,337,3,241,120,0,337,338,3,265,132,0,338,339,3,277,
  	138,0,339,340,3,263,131,0,340,341,3,275,137,0,341,22,1,0,0,0,342,343,
  	3,241,120,0,343,344,3,271,135,0,344,345,3,245,122,0,345,346,3,237,118,
  	0,346,347,3,275,137,0,347,348,3,245,122,0,348,24,1,0,0,0,349,350,3,243,
  	121,0,350,351,3,245,122,0,351,352,3,259,129,0,352,353,3,245,122,0,353,
  	354,3,275,137,0,354,355,3,245,122,0,355,26,1,0,0,0,356,357,3,243,121,
  	0,357,358,3,245,122,0,358,359,3,273,136,0,359,360,3,241,120,0,360,361,
  	3,271,135,0,361,362,3,253,126,0,362,363,3,239,119,0,363,364,3,245,122,
  	0,364,28,1,0,0,0,365,366,3,243,121,0,366,367,3,245,122,0,367,368,3,273,
  	136,0,368,369,3,241,120,0,369,30,1,0,0,0,370,371,3,243,121,0,371,372,
  	3,253,126,0,372,373,3,261,130,0,373,374,3,245,122,0,374,375,3,263,131,
  	0,375,376,3,273,136,0,376,377,3,253,126,0,377,378,3,265,132,0,378,379,
  	3,263,131,0,379,380,3,273,136,0,380,32,1,0,0,0,381,382,3,243,121,0,382,
  	383,3,253,126,0,383,384,3,273,136,0,384,385,3,275,137,0,385,386,3,253,
  	126,0,386,387,3,263,131,0,387,388,3,241,120,0,388,389,3,275,137,0,389,
  	34,1,0,0,0,390,391,3,245,122,0,391,392,3,243,121,0,392,393,3,249,124,
  	0,393,394,3,245,122,0,394,36,1,0,0,0,395,396,3,245,122,0,396,397,3,277,
  	138,0,397,398,3,241,120,0,398,399,3,259,129,0,399,400,3,253,126,0,400,
  	401,3,243,121,0,401,402,3,245,122,0,402,403,3,237,118,0,403,404,3,263,
  	131,0,404,38,1,0,0,0,405,406,3,247,123,0,406,407,3,271,135,0,407,408,
  	3,265,132,0,408,409,3,261,130,0,409,40,1,0,0,0,410,411,3,253,126,0,411,
  	412,3,263,131,0,412,413,3,241,120,0,413,414,3,265,132,0,414,415,3,261,
  	130,0,415,416,3,253,126,0,416,417,3,263,131,0,417,418,3,249,124,0,418,
  	42,1,0,0,0,419,420,3,253,126,0,420,421,3,263,131,0,421,422,3,243,121,
  	0,422,423,3,245,122,0,423,424,3,283,141,0,424,44,1,0,0,0,425,426,3,253,
  	126,0,426,427,3,263,131,0,427,428,3,273,136,0,428,429,3,245,122,0,429,
  	430,3,271,135,0,430,431,3,275,137,0,431,46,1,0,0,0,432,433,3,253,126,
  	0,433,434,3,263,131,0,434,435,3,275,137,0,435,436,3,245,122,0,436,437,
  	3,249,124,0,437,438,3,245,122,0,438,439,3,271,135,0,439,48,1,0,0,0,440,
  	441,3,253,126,0,441,442,3,263,131,0,442,443,3,275,137,0,443,444,3,265,
  	132,0,444,50,1,0,0,0,445,446,3,253,126,0,446,447,3,273,136,0,447,52,1,
  	0,0,0,448,449,5,102,0,0,449,450,5,97,0,0,450,451,5,108,0,0,451,452,5,
  	115,0,0,452,453,5,101,0,0,453,54,1,0,0,0,454,455,3,247,123,0,455,456,
  	3,259,129,0,456,457,3,265,132,0,457,458,3,237,118,0,458,459,3,275,137,
  	0,459,56,1,0,0,0,460,461,3,249,124,0,461,462,3,271,135,0,462,463,3,265,
  	132,0,463,464,3,277,138,0,464,465,3,267,133,0,465,58,1,0,0,0,466,467,
  	3,249,124,0,467,468,3,271,135,0,468,469,3,265,132,0,469,470,3,277,138,
  	0,470,471,3,267,133,0,471,472,3,273,136,0,472,60,1,0,0,0,473,474,3,253,
  	126,0,474,475,3,243,121,0,475,476,3,245,122,0,476,477,3,263,131,0,477,
  	478,3,275,137,0,478,479,3,253,126,0,479,480,3,275,137,0,480,481,3,285,
  	142,0,481,62,1,0,0,0,482,483,3,259,129,0,483,484,3,237,118,0,484,485,
  	3,239,119,0,485,486,3,245,122,0,486,487,3,259,129,0,487,488,3,273,136,
  	0,488,64,1,0,0,0,489,490,3,259,129,0,490,491,3,237,118,0,491,492,3,239,
  	119,0,492,493,3,245,122,0,493,494,3,259,129,0,494,66,1,0,0,0,495,496,
  	3,259,129,0,496,497,3,253,126,0,497,498,3,261,130,0,498,499,3,253,126,
  	0,499,500,3,275,137,0,500,68,1,0,0,0,501,502,3,261,130,0,502,503,3,237,
  	118,0,503,504,3,263,131,0,504,505,3,251,125,0,505,506,3,237,118,0,506,
  	507,3,275,137,0,507,508,3,275,137,0,508,509,3,237,118,0,509,510,3,263,
  	131,0,510,70,1,0,0,0,511,512,3,261,130,0,512,513,3,237,118,0,513,514,
  	3,275,137,0,514,515,3,241,120,0,515,516,3,251,125,0,516,72,1,0,0,0,517,
  	518,3,261,130,0,518,519,3,237,118,0,519,520,3,283,141,0,520,74,1,0,0,
  	0,521,522,3,261,130,0,522,523,3,253,126,0,523,524,3,263,131,0,524,76,
  	1,0,0,0,525,526,3,263,131,0,526,527,3,247,123,0,527,528,3,257,128,0,528,
  	529,3,243,121,0,529,530,5,95,0,0,530,531,3,241,120,0,531,532,3,237,118,
  	0,532,533,3,273,136,0,533,534,3,245,122,0,534,535,3,247,123,0,535,536,
  	3,265,132,0,536,537,3,259,129,0,537,538,3,243,121,0,538,78,1,0,0,0,539,
  	540,3,263,131,0,540,541,3,265,132,0,541,542,3,271,135,0,542,543,3,261,
  	130,0,543,544,3,237,118,0,544,545,3,259,129,0,545,546,3,253,126,0,546,
  	547,3,287,143,0,547,548,3,245,122,0,548,80,1,0,0,0,549,550,3,265,132,
  	0,550,551,3,239,119,0,551,552,3,255,127,0,552,553,3,245,122,0,553,554,
  	3,241,120,0,554,555,3,275,137,0,555,556,3,273,136,0,556,82,1,0,0,0,557,
  	558,3,265,132,0,558,559,3,247,123,0,559,560,3,247,123,0,560,561,3,273,
  	136,0,561,562,3,245,122,0,562,563,3,275,137,0,563,84,1,0,0,0,564,565,
  	3,265,132,0,565,566,3,263,131,0,566,86,1,0,0,0,567,568,3,265,132,0,568,
  	569,3,267,133,0,569,570,3,275,137,0,570,571,3,253,126,0,571,572,3,265,
  	132,0,572,573,3,263,131,0,573,574,3,237,118,0,574,575,3,259,129,0,575,
  	88,1,0,0,0,576,577,3,265,132,0,577,578,3,271,135,0,578,579,3,243,121,
  	0,579,580,3,245,122,0,580,581,3,271,135,0,581,90,1,0,0,0,582,583,3,265,
  	132,0,583,584,3,271,135,0,584,92,1,0,0,0,585,586,3,265,132,0,586,587,
  	3,277,138,0,587,588,3,275,137,0,588,589,3,249,124,0,589,590,3,265,132,
  	0,590,591,3,253,126,0,591,592,3,263,131,0,592,593,3,249,124,0,593,94,
  	1,0,0,0,594,595,3,267,133,0,595,596,3,271,135,0,596,597,3,245,122,0,597,
  	598,3,247,123,0,598,599,3,253,126,0,599,600,3,283,141,0,600,96,1,0,0,
  	0,601,602,3,267,133,0,602,603,3,271,135,0,603,604,3,265,132,0,604,605,
  	3,267,133,0,605,606,3,245,122,0,606,607,3,271,135,0,607,608,3,275,137,
  	0,608,609,3,253,126,0,609,610,3,245,122,0,610,611,3,273,136,0,611,98,
  	1,0,0,0,612,613,3,267,133,0,613,614,3,271,135,0,614,615,3,265,132,0,615,
  	616,3,267,133,0,616,617,3,245,122,0,617,618,3,271,135,0,618,619,3,275,
  	137,0,619,620,3,285,142,0,620,100,1,0,0,0,621,622,3,263,131,0,622,623,
  	3,265,132,0,623,624,3,275,137,0,624,102,1,0,0,0,625,626,3,263,131,0,626,
  	627,3,277,138,0,627,628,3,259,129,0,628,629,3,259,129,0,629,104,1,0,0,
  	0,630,631,3,273,136,0,631,632,3,251,125,0,632,633,3,265,132,0,633,634,
  	3,271,135,0,634,635,3,275,137,0,635,636,3,245,122,0,636,637,3,273,136,
  	0,637,638,3,275,137,0,638,106,1,0,0,0,639,640,3,273,136,0,640,641,3,251,
  	125,0,641,642,3,265,132,0,642,643,3,281,140,0,643,108,1,0,0,0,644,645,
  	3,273,136,0,645,646,3,253,126,0,646,647,3,261,130,0,647,648,3,267,133,
  	0,648,649,3,259,129,0,649,650,3,245,122,0,650,110,1,0,0,0,651,652,3,275,
  	137,0,652,653,3,245,122,0,653,654,3,263,131,0,654,655,3,273,136,0,655,
  	656,3,265,132,0,656,657,3,271,135,0,657,658,5,95,0,0,658,659,3,243,121,
  	0,659,660,3,253,126,0,660,661,3,273,136,0,661,662,3,275,137,0,662,663,
  	3,237,118,0,663,664,3,263,131,0,664,665,3,241,120,0,665,666,3,245,122,
  	0,666,112,1,0,0,0,667,668,3,275,137,0,668,669,3,245,122,0,669,670,3,283,
  	141,0,670,671,3,275,137,0,671,672,5,95,0,0,672,673,3,273,136,0,673,674,
  	3,245,122,0,674,675,3,237,118,0,675,676,3,271,135,0,676,677,3,241,120,
  	0,677,678,3,251,125,0,678,114,1,0,0,0,679,680,3,271,135,0,680,681,3,245,
  	122,0,681,682,3,249,124,0,682,683,3,245,122,0,683,684,3,283,141,0,684,
  	116,1,0,0,0,685,686,3,271,135,0,686,687,3,245,122,0,687,688,3,275,137,
  	0,688,689,3,277,138,0,689,690,3,271,135,0,690,691,3,263,131,0,691,118,
  	1,0,0,0,692,693,3,273,136,0,693,694,3,245,122,0,694,695,3,275,137,0,695,
  	120,1,0,0,0,696,697,3,273,136,0,697,698,3,277,138,0,698,699,3,261,130,
  	0,699,122,1,0,0,0,700,701,3,273,136,0,701,702,3,275,137,0,702,703,3,271,
  	135,0,703,704,3,253,126,0,704,705,3,263,131,0,705,706,3,249,124,0,706,
  	124,1,0,0,0,707,708,3,273,136,0,708,709,3,275,137,0,709,710,3,265,132,
  	0,710,711,3,271,135,0,711,712,3,245,122,0,712,126,1,0,0,0,713,714,3,275,
  	137,0,714,715,3,245,122,0,715,716,3,263,131,0,716,717,3,273,136,0,717,
  	718,3,265,132,0,718,719,3,271,135,0,719,128,1,0,0,0,720,721,3,275,137,
  	0,721,722,3,245,122,0,722,723,3,283,141,0,723,724,3,275,137,0,724,130,
  	1,0,0,0,725,726,5,116,0,0,726,727,5,114,0,0,727,728,5,117,0,0,728,729,
  	5,101,0,0,729,132,1,0,0,0,730,731,3,275,137,0,731,732,3,265,132,0,732,
  	733,3,257,128,0,733,734,3,245,122,0,734,735,3,263,131,0,735,736,3,253,
  	126,0,736,737,3,287,143,0,737,738,3,245,122,0,738,134,1,0,0,0,739,740,
  	3,275,137,0,740,741,3,271,135,0,741,742,3,237,118,0,742,743,3,253,126,
  	0,743,744,3,259,129,0,744,745,3,273,136,0,745,136,1,0,0,0,746,747,3,279,
  	139,0,747,748,3,237,118,0,748,749,3,259,129,0,749,750,3,277,138,0,750,
  	751,3,245,122,0,751,752,3,273,136,0,752,138,1,0,0,0,753,754,3,281,140,
  	0,754,755,3,237,118,0,755,756,3,259,129,0,756,757,3,257,128,0,757,758,
  	3,273,136,0,758,140,1,0,0,0,759,760,3,281,140,0,760,761,3,253,126,0,761,
  	762,3,275,137,0,762,763,3,251,125,0,763,142,1,0,0,0,764,765,3,281,140,
  	0,765,766,3,251,125,0,766,767,3,245,122,0,767,768,3,271,135,0,768,769,
  	3,245,122,0,769,144,1,0,0,0,770,771,3,243,121,0,771,772,3,237,118,0,772,
  	773,3,275,137,0,773,774,3,237,118,0,774,775,5,95,0,0,775,776,3,275,137,
  	0,776,777,3,245,122,0,777,778,3,273,136,0,778,779,3,275,137,0,779,146,
  	1,0,0,0,780,781,3,263,131,0,781,782,3,237,118,0,782,783,3,253,126,0,783,
  	784,3,279,139,0,784,785,3,245,122,0,785,148,1,0,0,0,786,787,3,281,140,
  	0,787,788,3,273,136,0,788,789,5,95,0,0,789,790,3,257,128,0,790,791,3,
  	245,122,0,791,792,3,245,122,0,792,793,3,267,133,0,793,794,5,95,0,0,794,
  	795,3,267,133,0,795,796,3,277,138,0,796,797,3,263,131,0,797,798,3,241,
  	120,0,798,799,3,275,137,0,799,150,1,0,0,0,800,801,3,281,140,0,801,802,
  	3,273,136,0,802,803,5,95,0,0,803,804,3,271,135,0,804,805,3,261,130,0,
  	805,806,5,95,0,0,806,807,3,267,133,0,807,808,3,277,138,0,808,809,3,263,
  	131,0,809,810,3,241,120,0,810,811,3,275,137,0,811,152,1,0,0,0,812,813,
  	3,281,140,0,813,814,3,273,136,0,814,815,5,95,0,0,815,816,3,273,136,0,
  	816,817,3,267,133,0,817,818,3,259,129,0,818,819,3,253,126,0,819,820,3,
  	275,137,0,820,821,5,95,0,0,821,822,3,267,133,0,822,823,3,277,138,0,823,
  	824,3,263,131,0,824,825,3,241,120,0,825,826,3,275,137,0,826,154,1,0,0,
  	0,827,828,5,58,0,0,828,829,5,116,0,0,829,830,5,114,0,0,830,831,5,117,
  	0,0,831,832,5,101,0,0,832,156,1,0,0,0,833,834,5,58,0,0,834,835,5,102,
  	0,0,835,836,5,97,0,0,836,837,5,108,0,0,837,838,5,115,0,0,838,839,5,101,
  	0,0,839,158,1,0,0,0,840,841,5,95,0,0,841,842,5,97,0,0,842,844,1,0,0,0,
  	843,845,7,0,0,0,844,843,1,0,0,0,845,846,1,0,0,0,846,844,1,0,0,0,846,847,
  	1,0,0,0,847,160,1,0,0,0,848,849,5,95,0,0,849,850,5,101,0,0,850,852,1,
  	0,0,0,851,853,7,0,0,0,852,851,1,0,0,0,853,854,1,0,0,0,854,852,1,0,0,0,
  	854,855,1,0,0,0,855,162,1,0,0,0,856,857,5,46,0,0,857,861,7,1,0,0,858,
  	860,7,2,0,0,859,858,1,0,0,0,860,863,1,0,0,0,861,859,1,0,0,0,861,862,1,
  	0,0,0,862,164,1,0,0,0,863,861,1,0,0,0,864,865,5,58,0,0,865,869,7,1,0,
  	0,866,868,7,2,0,0,867,866,1,0,0,0,868,871,1,0,0,0,869,867,1,0,0,0,869,
  	870,1,0,0,0,870,166,1,0,0,0,871,869,1,0,0,0,872,873,5,58,0,0,873,874,
  	5,63,0,0,874,878,7,1,0,0,875,877,7,2,0,0,876,875,1,0,0,0,877,880,1,0,
  	0,0,878,876,1,0,0,0,878,879,1,0,0,0,879,168,1,0,0,0,880,878,1,0,0,0,881,
  	882,5,63,0,0,882,886,7,1,0,0,883,885,7,2,0,0,884,883,1,0,0,0,885,888,
  	1,0,0,0,886,884,1,0,0,0,886,887,1,0,0,0,887,170,1,0,0,0,888,886,1,0,0,
  	0,889,895,5,34,0,0,890,894,8,3,0,0,891,892,5,92,0,0,892,894,5,34,0,0,
  	893,890,1,0,0,0,893,891,1,0,0,0,894,897,1,0,0,0,895,893,1,0,0,0,895,896,
  	1,0,0,0,896,898,1,0,0,0,897,895,1,0,0,0,898,899,5,34,0,0,899,172,1,0,
  	0,0,900,902,3,233,116,0,901,900,1,0,0,0,902,903,1,0,0,0,903,901,1,0,0,
  	0,903,904,1,0,0,0,904,174,1,0,0,0,905,907,3,233,116,0,906,905,1,0,0,0,
  	907,908,1,0,0,0,908,906,1,0,0,0,908,909,1,0,0,0,909,910,1,0,0,0,910,914,
  	5,46,0,0,911,913,3,233,116,0,912,911,1,0,0,0,913,916,1,0,0,0,914,912,
  	1,0,0,0,914,915,1,0,0,0,915,924,1,0,0,0,916,914,1,0,0,0,917,919,5,46,
  	0,0,918,920,3,233,116,0,919,918,1,0,0,0,920,921,1,0,0,0,921,919,1,0,0,
  	0,921,922,1,0,0,0,922,924,1,0,0,0,923,906,1,0,0,0,923,917,1,0,0,0,924,
  	176,1,0,0,0,925,927,3,233,116,0,926,925,1,0,0,0,927,928,1,0,0,0,928,926,
  	1,0,0,0,928,929,1,0,0,0,929,930,1,0,0,0,930,934,5,46,0,0,931,933,3,233,
  	116,0,932,931,1,0,0,0,933,936,1,0,0,0,934,932,1,0,0,0,934,935,1,0,0,0,
  	935,937,1,0,0,0,936,934,1,0,0,0,937,938,3,235,117,0,938,955,1,0,0,0,939,
  	941,5,46,0,0,940,942,3,233,116,0,941,940,1,0,0,0,942,943,1,0,0,0,943,
  	941,1,0,0,0,943,944,1,0,0,0,944,945,1,0,0,0,945,946,3,235,117,0,946,955,
  	1,0,0,0,947,949,3,233,116,0,948,947,1,0,0,0,949,950,1,0,0,0,950,948,1,
  	0,0,0,950,951,1,0,0,0,951,952,1,0,0,0,952,953,3,235,117,0,953,955,1,0,
  	0,0,954,926,1,0,0,0,954,939,1,0,0,0,954,948,1,0,0,0,955,178,1,0,0,0,956,
  	960,7,1,0,0,957,959,7,2,0,0,958,957,1,0,0,0,959,962,1,0,0,0,960,958,1,
  	0,0,0,960,961,1,0,0,0,961,180,1,0,0,0,962,960,1,0,0,0,963,964,5,60,0,
  	0,964,965,5,61,0,0,965,182,1,0,0,0,966,967,5,62,0,0,967,968,5,61,0,0,
  	968,184,1,0,0,0,969,970,5,61,0,0,970,971,5,61,0,0,971,186,1,0,0,0,972,
  	973,5,33,0,0,973,974,5,61,0,0,974,188,1,0,0,0,975,976,5,60,0,0,976,190,
  	1,0,0,0,977,978,5,62,0,0,978,192,1,0,0,0,979,980,5,61,0,0,980,194,1,0,
  	0,0,981,982,5,47,0,0,982,196,1,0,0,0,983,984,5,124,0,0,984,198,1,0,0,
  	0,985,986,5,94,0,0,986,200,1,0,0,0,987,988,5,42,0,0,988,202,1,0,0,0,989,
  	990,5,37,0,0,990,204,1,0,0,0,991,992,5,63,0,0,992,206,1,0,0,0,993,994,
  	5,43,0,0,994,208,1,0,0,0,995,996,5,45,0,0,996,210,1,0,0,0,997,998,5,40,
  	0,0,998,212,1,0,0,0,999,1000,5,41,0,0,1000,214,1,0,0,0,1001,1002,5,123,
  	0,0,1002,216,1,0,0,0,1003,1004,5,125,0,0,1004,218,1,0,0,0,1005,1006,5,
  	91,0,0,1006,220,1,0,0,0,1007,1008,5,93,0,0,1008,222,1,0,0,0,1009,1010,
  	5,44,0,0,1010,224,1,0,0,0,1011,1012,5,58,0,0,1012,226,1,0,0,0,1013,1015,
  	7,4,0,0,1014,1013,1,0,0,0,1015,1016,1,0,0,0,1016,1014,1,0,0,0,1016,1017,
  	1,0,0,0,1017,1018,1,0,0,0,1018,1019,6,113,0,0,1019,228,1,0,0,0,1020,1021,
  	5,47,0,0,1021,1022,5,47,0,0,1022,1026,1,0,0,0,1023,1025,8,5,0,0,1024,
  	1023,1,0,0,0,1025,1028,1,0,0,0,1026,1024,1,0,0,0,1026,1027,1,0,0,0,1027,
  	1034,1,0,0,0,1028,1026,1,0,0,0,1029,1031,5,13,0,0,1030,1029,1,0,0,0,1030,
  	1031,1,0,0,0,1031,1032,1,0,0,0,1032,1035,5,10,0,0,1033,1035,5,0,0,1,1034,
  	1030,1,0,0,0,1034,1033,1,0,0,0,1035,1036,1,0,0,0,1036,1037,6,114,1,0,
  	1037,230,1,0,0,0,1038,1039,9,0,0,0,1039,232,1,0,0,0,1040,1041,7,0,0,0,
  	1041,234,1,0,0,0,1042,1044,7,6,0,0,1043,1045,7,7,0,0,1044,1043,1,0,0,
  	0,1044,1045,1,0,0,0,1045,1047,1,0,0,0,1046,1048,3,233,116,0,1047,1046,
  	1,0,0,0,1048,1049,1,0,0,0,1049,1047,1,0,0,0,1049,1050,1,0,0,0,1050,236,
  	1,0,0,0,1051,1052,7,8,0,0,1052,238,1,0,0,0,1053,1054,7,9,0,0,1054,240,
  	1,0,0,0,1055,1056,7,10,0,0,1056,242,1,0,0,0,1057,1058,7,11,0,0,1058,244,
  	1,0,0,0,1059,1060,7,6,0,0,1060,246,1,0,0,0,1061,1062,7,12,0,0,1062,248,
  	1,0,0,0,1063,1064,7,13,0,0,1064,250,1,0,0,0,1065,1066,7,14,0,0,1066,252,
  	1,0,0,0,1067,1068,7,15,0,0,1068,254,1,0,0,0,1069,1070,7,16,0,0,1070,256,
  	1,0,0,0,1071,1072,7,17,0,0,1072,258,1,0,0,0,1073,1074,7,18,0,0,1074,260,
  	1,0,0,0,1075,1076,7,19,0,0,1076,262,1,0,0,0,1077,1078,7,20,0,0,1078,264,
  	1,0,0,0,1079,1080,7,21,0,0,1080,266,1,0,0,0,1081,1082,7,22,0,0,1082,268,
  	1,0,0,0,1083,1084,7,23,0,0,1084,270,1,0,0,0,1085,1086,7,24,0,0,1086,272,
  	1,0,0,0,1087,1088,7,25,0,0,1088,274,1,0,0,0,1089,1090,7,26,0,0,1090,276,
  	1,0,0,0,1091,1092,7,27,0,0,1092,278,1,0,0,0,1093,1094,7,28,0,0,1094,280,
  	1,0,0,0,1095,1096,7,29,0,0,1096,282,1,0,0,0,1097,1098,7,30,0,0,1098,284,
  	1,0,0,0,1099,1100,7,31,0,0,1100,286,1,0,0,0,1101,1102,7,32,0,0,1102,288,
  	1,0,0,0,26,0,846,854,861,869,878,886,893,895,903,908,914,921,923,928,
  	934,943,950,954,960,1016,1026,1030,1034,1044,1049,2,0,2,0,0,1,0
  };
  staticData->serializedATN = antlr4::atn::SerializedATNView(serializedATNSegment, sizeof(serializedATNSegment) / sizeof(serializedATNSegment[0]));

  antlr4::atn::ATNDeserializer deserializer;
  staticData->atn = deserializer.deserialize(staticData->serializedATN);

  const size_t count = staticData->atn->getNumberOfDecisions();
  staticData->decisionToDFA.reserve(count);
  for (size_t i = 0; i < count; i++) { 
    staticData->decisionToDFA.emplace_back(staticData->atn->getDecisionState(i), i);
  }
  mql_lexerLexerStaticData = staticData.release();
}

}

MQL_Lexer::MQL_Lexer(CharStream *input) : Lexer(input) {
  MQL_Lexer::initialize();
  _interpreter = new atn::LexerATNSimulator(this, *mql_lexerLexerStaticData->atn, mql_lexerLexerStaticData->decisionToDFA, mql_lexerLexerStaticData->sharedContextCache);
}

MQL_Lexer::~MQL_Lexer() {
  delete _interpreter;
}

std::string MQL_Lexer::getGrammarFileName() const {
  return "MQL_Lexer.g4";
}

const std::vector<std::string>& MQL_Lexer::getRuleNames() const {
  return mql_lexerLexerStaticData->ruleNames;
}

const std::vector<std::string>& MQL_Lexer::getChannelNames() const {
  return mql_lexerLexerStaticData->channelNames;
}

const std::vector<std::string>& MQL_Lexer::getModeNames() const {
  return mql_lexerLexerStaticData->modeNames;
}

const dfa::Vocabulary& MQL_Lexer::getVocabulary() const {
  return mql_lexerLexerStaticData->vocabulary;
}

antlr4::atn::SerializedATNView MQL_Lexer::getSerializedATN() const {
  return mql_lexerLexerStaticData->serializedATN;
}

const atn::ATN& MQL_Lexer::getATN() const {
  return *mql_lexerLexerStaticData->atn;
}




void MQL_Lexer::initialize() {
#if ANTLR4_USE_THREAD_LOCAL_CACHE
  mql_lexerLexerInitialize();
#else
  ::antlr4::internal::call_once(mql_lexerLexerOnceFlag, mql_lexerLexerInitialize);
#endif
}
